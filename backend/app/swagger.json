{
  "swagger": "2.0",
  "info": {
    "title": "TripStory",
    "description": "TripStory API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v0/profile": {
      "get": {
        "summary": "Retrieve authenticated user",
        "parameters": [],
        "tags": [
          "Auth"
        ],
        "responses": {
          "301": {
            "description": "Resource is elsewhere."
          },
          "401": {
            "description": "Authentication is required"
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/me": {
      "get": {
        "summary": "Retrieve authenticated user",
        "parameters": [],
        "tags": [
          "Auth"
        ],
        "responses": {
          "301": {
            "description": "Resource is elsewhere."
          },
          "401": {
            "description": "Authentication is required"
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/tokens": {
      "post": {
        "summary": "Create a JSON Web Token",
        "parameters": [],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/login": {
      "post": {
        "summary": "Login with sessions",
        "parameters": [],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "400": {
            "description": "You fucked up."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/signup": {
      "post": {
        "summary": "Signup",
        "parameters": [],
        "tags": [
          "Auth"
        ],
        "responses": {
          "201": {
            "description": "Resource were created or updated."
          },
          "400": {
            "description": "You fucked up."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/logout": {
      "post": {
        "summary": "Log out from sessions",
        "parameters": [],
        "tags": [
          "Auth"
        ],
        "responses": {
          "204": {
            "description": "Everything went well but no content."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/auth/facebook": {
      "get": {
        "summary": "Login via Facebook OAuth",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "URL to redirect to after login.",
            "required": false,
            "type": "string",
            "format": "url"
          }
        ],
        "tags": [
          "Auth",
          "Facebook"
        ],
        "responses": {
          "301": {
            "description": "Resource is elsewhere."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/auth/facebook/callback": {
      "get": {
        "summary": "Facebook OAuth callback",
        "parameters": [],
        "tags": [
          "Auth",
          "Facebook"
        ],
        "responses": {
          "301": {
            "description": "Resource is elsewhere."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "summary": "Login via Google OAuth",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "URL to redirect to after login.",
            "required": false,
            "type": "string",
            "format": "url"
          }
        ],
        "tags": [
          "Auth",
          "Google"
        ],
        "responses": {
          "301": {
            "description": "Resource is elsewhere."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "summary": "Google OAuth callback",
        "parameters": [],
        "tags": [
          "Auth",
          "Google"
        ],
        "responses": {
          "301": {
            "description": "Resource is elsewhere."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/auth/twitter": {
      "get": {
        "summary": "Login via Twitter OAuth",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "URL to redirect to after login.",
            "required": false,
            "type": "string",
            "format": "url"
          }
        ],
        "tags": [
          "Auth",
          "Twitter"
        ],
        "responses": {
          "301": {
            "description": "Resource is elsewhere."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/auth/twitter/callback": {
      "get": {
        "summary": "Twitter OAuth callback",
        "parameters": [],
        "tags": [
          "Auth",
          "Twitter"
        ],
        "responses": {
          "301": {
            "description": "Resource is elsewhere."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/auth/xee": {
      "get": {
        "summary": "Login via Xee OAuth",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "URL to redirect to after login.",
            "required": false,
            "type": "string",
            "format": "url"
          }
        ],
        "tags": [
          "Auth",
          "Xee"
        ],
        "responses": {
          "301": {
            "description": "Resource is elsewhere."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/auth/xee/callback": {
      "get": {
        "summary": "Xee OAuth callback",
        "parameters": [],
        "tags": [
          "Auth",
          "Xee"
        ],
        "responses": {
          "301": {
            "description": "Resource is elsewhere."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/cars": {
      "get": {
        "summary": "List all cars",
        "parameters": [],
        "tags": [
          "Cars"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/users/{user_id}/cars": {
      "get": {
        "summary": "List a user's cars",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "Cars"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/users/{user_id}/cars/{car_id}": {
      "get": {
        "summary": "Retrieve a user's car",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          },
          {
            "name": "car_id",
            "in": "path",
            "description": "Car MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "Cars"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      },
      "delete": {
        "summary": "Delete a user's car",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          },
          {
            "name": "car_id",
            "in": "path",
            "description": "Car MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "Cars"
        ],
        "responses": {
          "400": {
            "description": "You fucked up."
          },
          "410": {
            "description": "RIP Resource."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/events": {
      "get": {
        "summary": "List all events",
        "parameters": [],
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/users/{user_id}/events": {
      "get": {
        "summary": "List a user's events",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/users/{user_id}/events/{event_id}": {
      "get": {
        "summary": "Retrieve a user's event",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "Event MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      },
      "put": {
        "summary": "Create/edit a user's event",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "Event MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "Events"
        ],
        "responses": {
          "201": {
            "description": "Resource were created or updated."
          },
          "400": {
            "description": "You fucked up."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      },
      "delete": {
        "summary": "DelEte a user's event",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "Event MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "Events"
        ],
        "responses": {
          "400": {
            "description": "You fucked up."
          },
          "410": {
            "description": "RIP Resource."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/ping": {
      "get": {
        "summary": "Ping",
        "parameters": [],
        "tags": [
          "System"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/bus": {
      "post": {
        "summary": "Trigger an event in the bus",
        "parameters": [],
        "tags": [
          "System",
          "Events"
        ],
        "responses": {
          "201": {
            "description": "Resource were created or updated."
          },
          "400": {
            "description": "You fucked up."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/trips": {
      "get": {
        "summary": "List all trips",
        "parameters": [],
        "tags": [
          "Trips"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/users/{user_id}/trips": {
      "get": {
        "summary": "List a user's trips",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "Trips"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/users/{user_id}/trips/{trip_id}": {
      "get": {
        "summary": "Retrieve a user's trip",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          },
          {
            "name": "trip_id",
            "in": "path",
            "description": "Trip MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "Trips"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "410": {
            "description": "RIP Resource."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      },
      "put": {
        "summary": "Create/edit a user's trip",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          },
          {
            "name": "trip_id",
            "in": "path",
            "description": "Trip MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "Trips"
        ],
        "responses": {
          "201": {
            "description": "Resource were created or updated."
          },
          "400": {
            "description": "You fucked up."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      },
      "delete": {
        "summary": "Delete a user's trip",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          },
          {
            "name": "trip_id",
            "in": "path",
            "description": "Trip MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "Trips"
        ],
        "responses": {
          "400": {
            "description": "You fucked up."
          },
          "410": {
            "description": "RIP Resource."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/users": {
      "get": {
        "summary": "List all users",
        "parameters": [],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/users/{user_id}": {
      "get": {
        "summary": "Retrieve a user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "410": {
            "description": "RIP Resource."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      },
      "put": {
        "summary": "Create/edit a user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "Resource were created or updated."
          },
          "400": {
            "description": "You fucked up."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      },
      "delete": {
        "summary": "Remove a user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "400": {
            "description": "You fucked up."
          },
          "410": {
            "description": "RIP Resource."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/users/{user_id}/avatar": {
      "put": {
        "summary": "Change a user's avatar",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "Resource were created or updated."
          },
          "410": {
            "description": "RIP Resource."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    },
    "/api/v0/users/{user_id}/friends": {
      "get": {
        "summary": "List a user's friends",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Everything went well."
          },
          "410": {
            "description": "RIP Resource."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      },
      "post": {
        "summary": "Invite a user's friend",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User MongoDB ObjectId.",
            "required": false,
            "type": "string",
            "pattern": "[a-z0-9]{24}"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "Resource were created or updated."
          },
          "410": {
            "description": "RIP Resource."
          },
          "500": {
            "description": "We fucked up."
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    },
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}